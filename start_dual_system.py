#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ dual —Å–∏—Å—Ç–µ–º—ã: Text Generation WebUI + FastAPI Server
–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞
"""

import subprocess
import sys
import time
import requests
import os
from pathlib import Path

def check_service(url, name, timeout=5):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        response = requests.get(url, timeout=timeout)
        return response.status_code == 200
    except:
        return False

def start_webui():
    """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã WebUI"""
    print("üîÑ –ó–∞–ø—É—Å–∫ Text Generation WebUI...")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ Python
    python_path = Path("D:/gitai/text-generation-webui-3.13/portable_env/python.exe")
    if not python_path.exists():
        python_path = "python"
    
    # –ó–∞–ø—É—Å–∫ WebUI
    webui_cmd = [
        str(python_path), "server.py",
        "--model", "Qwen2.5-14B-Instruct-Uncensored.i1-Q5_K_S.gguf",
        "--loader", "llama.cpp",
        "--gpu-layers", "43",
        "--n-ctx", "8192",
        "--api",
        "--listen-port", "7860",
        "--no-stream"
    ]
    
    webui_process = subprocess.Popen(
        webui_cmd,
        cwd=os.getcwd(),
        stdout=subprocess.PIPE,
        stderr=subprocess.STDOUT,
        text=True,
        bufsize=1
    )
    
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ WebUI...")
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ WebUI (–ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å)
    max_wait = 120  # 2 –º–∏–Ω—É—Ç—ã
    wait_interval = 5
    waited = 0
    
    while waited < max_wait:
        if check_service("http://127.0.0.1:7860", "WebUI"):
            print("‚úÖ WebUI –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            break
        
        time.sleep(wait_interval)
        waited += wait_interval
        print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ... ({waited}/{max_wait}s)")
    else:
        print("‚ùå WebUI –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
        webui_process.terminate()
        return None
    
    return webui_process

def start_fastapi():
    """–ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üîÑ –ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ Python
    python_path = Path("D:/gitai/text-generation-webui-3.13/portable_env/python.exe")
    if not python_path.exists():
        python_path = "python"
    
    fastapi_cmd = [
        str(python_path), "fastapi_server.py",
        "--host", "127.0.0.1",
        "--port", "8000"
    ]
    
    fastapi_process = subprocess.Popen(
        fastapi_cmd,
        cwd=os.getcwd(),
        stdout=subprocess.PIPE,
        stderr=subprocess.STDOUT,
        text=True,
        bufsize=1
    )
    
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ FastAPI...")
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ FastAPI
    max_wait = 30
    wait_interval = 2
    waited = 0
    
    while waited < max_wait:
        if check_service("http://127.0.0.1:8000/health", "FastAPI"):
            print("‚úÖ FastAPI –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            break
        
        time.sleep(wait_interval)
        waited += wait_interval
        print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ... ({waited}/{max_wait}s)")
    else:
        print("‚ùå FastAPI –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
        fastapi_process.terminate()
        return None
    
    return fastapi_process

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 50)
    
    try:
        # –ó–∞–ø—É—Å–∫ WebUI
        webui_process = start_webui()
        if not webui_process:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å WebUI")
            return 1
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        print("‚è≥ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")
        time.sleep(10)
        
        # –ó–∞–ø—É—Å–∫ FastAPI
        fastapi_process = start_fastapi()
        if not fastapi_process:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å FastAPI")
            webui_process.terminate()
            return 1
        
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("=" * 50)
        print("üìç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:")
        print("  üåê Gradio WebUI:     http://127.0.0.1:7860")
        print("  üöÄ FastAPI Server:   http://127.0.0.1:8000")
        print("  üìñ API Docs:         http://127.0.0.1:8000/docs")
        print("  üîÑ Redoc:            http://127.0.0.1:8000/redoc")
        print("  ü§ñ OpenAI API:       http://127.0.0.1:5000")
        print("=" * 50)
        print("‚å®Ô∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        try:
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return 1
    
    finally:
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        print("üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        if 'fastapi_process' in locals() and fastapi_process:
            fastapi_process.terminate()
            print("‚úÖ FastAPI –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        if 'webui_process' in locals() and webui_process:
            webui_process.terminate()
            print("‚úÖ WebUI –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
    return 0

if __name__ == "__main__":
    sys.exit(main())