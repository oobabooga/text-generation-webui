#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import json
from datetime import datetime

print('üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´')
print('=' * 50)
print(f'–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime("%H:%M:%S")}')
print()

services = []

# 1. WebUI –ø—Ä–æ–≤–µ—Ä–∫–∞
print('1Ô∏è‚É£ WebUI (–ø–æ—Ä—Ç 7860):')
try:
    r = requests.get('http://127.0.0.1:7860', timeout=8)
    if r.status_code == 200:
        print('   ‚úÖ –°—Ç–∞—Ç—É—Å: –†–ê–ë–û–¢–ê–ï–¢')
        print('   üåê URL: http://127.0.0.1:7860')
        services.append('WebUI: ‚úÖ')
    else:
        print(f'   ‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: {r.status_code}')
        services.append('WebUI: ‚ùå')
except Exception as e:
    print(f'   ‚ùå –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {str(e)[:50]}')
    services.append('WebUI: ‚ùå')

print()

# 2. OpenAI API –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
print('2Ô∏è‚É£ OpenAI API (–ø–æ—Ä—Ç 5000):')
try:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ health
    try:
        health_r = requests.get('http://127.0.0.1:5000/health', timeout=5)
        print(f'   üîπ Health check: {"OK" if health_r.status_code == 200 else "FAIL"}')
    except:
        print('   üîπ Health check: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
    
    # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    data = {
        'model': 'gpt-3.5-turbo',
        'messages': [{'role': 'user', 'content': '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?'}],
        'max_tokens': 20,
        'temperature': 0.7
    }
    
    gen_r = requests.post(
        'http://127.0.0.1:5000/v1/chat/completions',
        headers={'Content-Type': 'application/json'},
        json=data,
        timeout=15
    )
    
    if gen_r.status_code == 200:
        result = gen_r.json()
        if 'choices' in result and result['choices']:
            message = result['choices'][0]['message']['content']
            print('   ‚úÖ –°—Ç–∞—Ç—É—Å: –†–ê–ë–û–¢–ê–ï–¢ –ò –ì–ï–ù–ï–†–ò–†–£–ï–¢')
            print(f'   üí¨ –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç: "{message[:60]}..."')
            print('   üåê URL: http://127.0.0.1:5000')
            services.append('OpenAI API: ‚úÖ')
        else:
            print('   ‚ö†Ô∏è  –û—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç')
            services.append('OpenAI API: ‚ö†Ô∏è')
    else:
        print(f'   ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {gen_r.status_code}')
        services.append('OpenAI API: ‚ùå')
        
except Exception as e:
    print(f'   ‚ùå –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {str(e)[:50]}')
    services.append('OpenAI API: ‚ùå')

print()

# 3. FastAPI Proxy –ø—Ä–æ–≤–µ—Ä–∫–∞
print('3Ô∏è‚É£ FastAPI Proxy (–ø–æ—Ä—Ç 8001):')
try:
    # Health check
    health_r = requests.get('http://127.0.0.1:8001/health', timeout=5)
    if health_r.status_code == 200:
        print('   üîπ Health check: OK')
        
        # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
        data = {'prompt': '–ü—Ä–∏–≤–µ—Ç', 'max_tokens': 15}
        gen_r = requests.post('http://127.0.0.1:8001/generate', json=data, timeout=15)
        
        if gen_r.status_code == 200:
            result = gen_r.json()
            print('   ‚úÖ –°—Ç–∞—Ç—É—Å: –†–ê–ë–û–¢–ê–ï–¢ –ò –ì–ï–ù–ï–†–ò–†–£–ï–¢')
            print(f'   üí¨ –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω')
            print('   üåê URL: http://127.0.0.1:8001')
            print('   üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://127.0.0.1:8001/docs')
            services.append('FastAPI Proxy: ‚úÖ')
        else:
            print(f'   ‚ö†Ô∏è  Health OK, –Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {gen_r.status_code}')
            services.append('FastAPI Proxy: ‚ö†Ô∏è')
    else:
        print(f'   ‚ùå Health check failed: {health_r.status_code}')
        services.append('FastAPI Proxy: ‚ùå')
        
except Exception as e:
    print(f'   ‚ùå –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {str(e)[:50]}')
    services.append('FastAPI Proxy: ‚ùå')

print()
print('üìä –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:')
print('=' * 30)
for service in services:
    print(f'   {service}')

working_count = sum(1 for s in services if '‚úÖ' in s)
print()
print(f'üéØ –†–∞–±–æ—Ç–∞—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: {working_count}/3')

if working_count == 3:
    print('üéâ –í–°–Ø –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–ê–ï–¢!')
elif working_count >= 2:
    print('‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç')
else:
    print('‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π')

print()
print('üîó –î–û–°–¢–£–ü–ù–´–ï –°–°–´–õ–ö–ò:')
print('   http://127.0.0.1:7860 - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (—Ä—É—Å—Å–∫–∏–π)')
print('   http://127.0.0.1:5000 - OpenAI —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π API')
print('   http://127.0.0.1:8001 - FastAPI –ø—Ä–æ–∫—Å–∏')
print('   http://127.0.0.1:8001/docs - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è')